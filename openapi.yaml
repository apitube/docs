openapi: 3.0.0
servers:
  - url: 'https://apitube.io/v1'
info:
  title: API Reference
  description: >-
    Here you have detailed documentation of all available API functions. To get started, you can make the sample request for each endpoint or [integrate into your application](/integrations).
  version: 1.0.0
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Articles
    description: Discover news articles that align with one or multiple search criteria.
paths:
  /news/articles:
    get:
      tags:
        - Articles
      summary: Get articles
      description: "The most recent news endpoint offers access to the most up-to-date and significant news stories.<br/>Calling this endpoint requires `1 point`"
      parameters:
        - name: api_key
          in: query
          description: Your API key from dashboard.
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Find articles by article title.
          required: false
          example: 'title=Apple'
          schema:
            type: string
        - name: content
          in: query
          description: Find articles by article content.
          required: false
          example: 'content=Macbook'
          schema:
            type: string
        - name: type
          in: query
          description: 'Find articles in the specified resource type(s). Multiple options can be specified by separating them with a comma, for example: `news,blog/company`.'
          example: 'type=news,blog/company'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - news
              - blog/company
              - blog/personal
            default: available
        - name: country
          in: query
          description: 'Find articles in the specified country(s). Multiple options can be specified by separating them with a comma, for example: `us,fr`. [Full list of available countries](/get-articles/countries).'
          example: 'country=us,gb'
          required: false
          style: form
          explode: false
          deprecated: false
#        - name: language
#          in: query
#          description: 'Find articles in the specified language(s). Multiple options can be specified by separating them with a comma, for example: `en,fr`. [Full list of available languages](/get-articles/categories).'
#          example: 'language=en,fr'
#          required: false
#          style: form
#          explode: false
#          deprecated: false
#          schema:
#            type: string
#            enum:
#              - english
#            default: english
        - name: category
          in: query
          description: 'Find articles in the specified category(s). Multiple options can be specified by separating them with a comma, for example: `design/digital,design/web`. [List of available categories](/get-articles/categories).'
          example: 'category=design/digital,design/web'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - news/World
              - news/Business
              - news/Politics
              - news/Technology
              - news/Environment
              - news/Health
              - news/Science
              - news/Sports
              - news/Arts_and_Entertainment
        - name: topic
          in: query
          description: 'Find articles in the specified topics(s). Multiple options can be specified by separating them with a comma, for example: `crypto_news,financial_news`. [List of available topics](/get-articles/topics).'
          example: 'topic=crypto_news'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - crypto_news
              - financial_news
              - video_games_news
              - ai_news
        - name: source
          in: query
          description: 'Find articles in the specified resource type(s). Multiple options can be specified by separating them with a comma, for example: `techcrunch.com,theverge.com`.'
          example: 'source=techcrunch.com,theverge.com'
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: date_start
          in: query
          description: 'The starting date on or after the articles of interest were published or created. The date should be in the `Possible values` formats.'
          example: 'date_start=2023-10-09'
          required: false
          examples:
            1:
              value: '2023-10-09'
            2:
              value: '2023-08-10 00:00:00'
            3:
              value: '2023-10-09T00:00:00'
            4:
              value: '2023-10-09T00:00:00+00:00'
            5:
              value: '2023-10-09T00:00:00+0000'
            6:
              value: '2023-10-09T00:00:00.000Z'
            7:
              value: '1698064154'
          schema:
            type: string
            enum:
              - 'RFC850'
              - 'RFC1036'
              - 'RFC1123'
              - 'RFC2822'
              - 'RFC3339'
              - 'ISO8601'
              - 'timestamp(as integer)'
        - name: date_end
          in: query
          description: 'The last date on or after the articles of interest were published or created. The date should be in the `Possible values` formats.'
          example: 'date_end=2023-10-09'
          required: false
          examples:
            1:
              value: '2023-10-09'
            2:
              value: '2023-08-10 00:00:00'
            3:
              value: '2023-10-09T00:00:00'
            4:
              value: '2023-10-09T00:00:00+00:00'
            5:
              value: '2023-10-09T00:00:00+0000'
            6:
              value: '2023-10-09T00:00:00.000Z'
            7:
              value: '1698064154'
          schema:
            type: string
            example: 3232323
            enum:
              - 'RFC850'
              - 'RFC1036'
              - 'RFC1123'
              - 'RFC2822'
              - 'RFC3339'
              - 'ISO8601'
              - 'timestamp(as integer)'
        - name: rank_min
          in: query
          description: The lowest boundary of the rank of a news website to filter by.
          required: false
          example: 'rank_min=45'
          schema:
            type: integer
            format: int
            minimum: 1
            maximum: 99
        - name: rank_max
          in: query
          description: The upper boundary of the rank of a news website to filter by.
          required: false
          example: 'rank_max=45'
          schema:
            type: integer
            format: int
            minimum: 1
            maximum: 99
        - name: sentiment_min
          in: query
          description: The minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive).
          required: false
          example: 'sentiment_min=0.02'
          schema:
            type: integer
            format: int
            minimum: -1
            maximum: 1
        - name: sentiment_max
          in: query
          description: The maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive).
          required: false
          example: 'sentiment_max=0.01'
          schema:
            type: integer
            format: int
            minimum: -1
            maximum: 1
        - name: location_name
          in: query
          description: Find articles in a specific location. Country or city.
          required: false
          example: 'location_name=Barcelona'
          schema:
            type: string
        - name: export_format
          in: query
          description: Export formatted data in many formats.
          example: 'export_format=json'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - json
              - xml
              - rss
              - html
              - csv
              - tsv
              - xls
              - xlsx
            default: json
        - name: sort_by
          in: query
          description: Choose the criteria for sorting the news articles.
          example: 'sort_by=date'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - published
              - created
              - sentiment
            default: created
        - name: sort_direction
          in: query
          description: Choose the criteria for sorting the news articles.
          example: 'sort_direction=desc'
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsArticles'
        '400':
          description: Parameter missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'
        '429':
          description: User's limit reached by key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'

  /news/article/{id}:
    get:
      tags:
        - Articles
      summary: Get article by ID
      description: 'Get specific article by ID.'
      parameters:
        - name: api_key
          in: query
          description: Your API key from dashboard.
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: Article ID.
          required: false
          example: 'bd4ddb06-c2e2-4ada-8228-7c952da9ed22'
          schema:
            type: string
        - name: export_format
          in: query
          description: Export formatted data in many formats.
          required: false
          style: form
          explode: false
          deprecated: false
          schema:
            type: string
            enum:
              - json
              - xml
              - rss
              - html
              - csv
              - tsv
              - xls
              - xlsx
            default: json
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsArticles'
        '400':
          description: Parameter missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'
        '429':
          description: User's limit reached by key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationInputParamsError'

#  /news/categories:
#    get:
#      tags:
#        - Articles
#      summary: Get categories
#      description: 'Get all available categories list.'
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/NewsCategories'

components:
  schemas:
    NewsArticles:
      title: articles
      description: Latest articles
      required:
        - status
        - total_results
        - updated_at
        - path
        - limit
        - next_page
        - previous_page
        - pages
        - export_formats
      type: object
      properties:
        status:
          type: string
          description: 'If all goes smoothly, it will return `ok`. In the event of an error, it will return `error` along with two additional attributes for error identification: `error_code` and `message`.'
          format: string
        total_results:
          type: integer
          description: 'Count all founded articles.'
          format: int
        limit:
          type: integer
          description: 'Articles per page.'
          format: int
        path:
          type: string
          description: 'Current request href.'
          format: string
        next_page:
          type: string
          description: 'Next page href.'
          format: string
        previous_page:
          type: string
          description: 'Previous page href.'
          format: string
        pages:
          type: integer
          description: 'Count total pages.'
          format: int
        user_input:
          type: object
          description: 'Current request parameters.'
          format: int
        export_formats:
          type: object
          description: Export to format.
          items:
            $ref: '#/components/schemas/NewsArticleExportFormats'
        updated_at:
          type: string
          description: 'Latest updated date.'
          format: 'string in RFC 3339 format'
        results:
          type: object
          items:
            $ref: '#/components/schemas/NewsArticle'
    NewsArticle:
      title: article
      description: Single article
      required:
        - id
        - href
        - published_at
        - title
        - description
#        - content_raw
        - content
        - image
        - country
        - category
        - resource
        - sentiment
        - locations
      type: object
      properties:
        id:
          type: string
          description: 'Article ID.'
        href:
          type: string
          description: 'Direct url.'
        published_at:
          type: string
          description: 'The date and time that the article was published or created, in UTC (+000).'
          format: 'string in RFC 3339 format'
        title:
          type: string
          description: 'Title.'
          format: string
        description:
          type: string
          description: 'Short description.'
          format: string
        content:
          type: string
          description: 'Full body without html tags.'
          format: string
#        content_raw:
#          type: string
#          description: 'Full body with html tags.'
#          format: string
        image:
          type: string
          description: 'First image in article.'
          format: string
        country:
          type: string
          description: 'Article country code.'
          format: string
#        language:
#          type: string
#          description: 'Article language code.'
#          format: string
        category:
          type: string
          description: 'Article category code.'
          format: string
        topic:
          type: string
          description: 'Article topic id.'
          format: string
        resource:
          type: array
          description: 'Information about resource.'
          required:
            - id
            - type
            - rank
          format: object
          properties:
            id:
              type: string
              description: 'Resource ID.'
              format: string
            type:
              type: string
              description: 'Resource type.'
              format: string
            rank:
              type: string
              description: 'Resource rank.'
              format: string
        sentiment:
          type: integer
          format: float
          description: Valid value is any floating number between -1 (very negative) to 1 (very positive).
        locations:
          type: array
          items:
            $ref: '#/components/schemas/NewsArticleLocation'

    NewsArticleLocation:
      title: locations
      description: Article detected location
      required:
        - country_code
        - country_name
        - city_name
        - coordinates
      type: array
      properties:
        country_code:
          type: string
          description: 'Country code.'
          format: string
        country_name:
          type: string
          description: 'Country name.'
          format: string
        city_name:
          type: string
          description: 'City name.'
          format: string
        coordinates:
          type: object
          required:
            - latitude
            - longitude
          format: object
          properties:
            latitude:
              type: integer
              description: 'Latitude.'
              format: float
            longitude:
              type: integer
              description: 'Longitude.'
              format: float

#    NewsCategories:
#      title: categories
#      description: Get all categories
#      required:
#        - results
#      type: object
#      properties:
#        results:
#          type: array
#          items:
#            $ref: '#/components/schemas/NewsCategory'

    NewsCategory:
      title: category
      description: Single category
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: 'Category ID.'
        name:
          type: string
          description: 'Category name.'

    NewsLanguages:
      title: languages
      description: Get all languages
      required:
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/NewsLanguage'

    NewsLanguage:
      title: language
      description: Single language
      required:
        - id
        - label
      type: object
      properties:
        id:
          type: string
          description: 'Language ID.'
        name:
          type: string
          description: 'Language name.'

    ValidationInputParamsError:
      title: Request failed
      description: Failed request
      required:
        - status
        - error_code
        - message
      type: object
      properties:
        status:
          type: string
          description: 'Error status.'
          format: string
          enum:
            - ok
            - error
        error_code:
          type: string
          description: 'Error code. [List HTTP Response codes](/http_response_codes)'
          format: string
        message:
          type: string
          description: 'Error message description. [List HTTP Response codes description](/http_response_codes)'
          format: string

    NewsArticleExportFormats:
      title: Exporting article formats
      description: Exporting article formats
      required:
        - json
        - xml
        - rss
        - html
        - csv
        - tsv
        - xls
        - xlsx
      type: object
      properties:
        json:
          type: string
          description: Export to JSON format.
          format: string
        xml:
          type: string
          description: Export to XML format.
          format: string
        rss:
          type: string
          description: Export to RSS format.
          format: string
        html:
          type: string
          description: Export to HTML format.
          format: string
        csv:
          type: string
          description: Export to CSV format.
          format: string
        tsv:
          type: string
          description: Export to TSV format.
          format: string
        xls:
          type: string
          description: Export to XLS format.
          format: string
        xlsx:
          type: string
          description: Export to XLSX format.
          format: string
